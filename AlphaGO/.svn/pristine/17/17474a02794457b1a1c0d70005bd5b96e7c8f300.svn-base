<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Student-Mapper">
	<sql id="search">
	<if test="searchType == 'tcw'.toString()">
			and name like '%'||#{keyword}||'%'
			
			or school_name like '%'||#{keyword}||'%'
			
			or phone like '%'||#{keyword}||'%'
			
			or grade like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 't'.toString()">
			and name like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'w'.toString()">
			and school_name like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'c'.toString()">
			and phone like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'n'.toString()">
			and grade like '%'||#{keyword}||'%'
		</if>
	</sql>


	<select id="selectStudentList" resultType="student">
		select
		*
		from
		member
		where authority='ROLE_STUDENT'
		order by grade asc
	</select>
	
	<select id="selectStudentListCount" resultType="int">
		select 
		count(*)
		from
		member
			where authority='ROLE_STUDENT'
		 	order by grade asc	
	</select>

	<select id="selectSearchStudentList" resultType="student">
		select
		* 
		from member
		 where id is not null 
		  and authority='ROLE_STUDENT'
		<include refid="search" />
		order by grade asc
	</select>
	
	<select id="selectSearchStudentListCount" resultType="int">
		select
		count(*) 
		from member
		where id is not null 
	    and authority='ROLE_STUDENT'
		<include refid="search" />
	</select>
	
	<update id="insertStudent" parameterType="student">
		insert into
		member(picture,id,name,authority,school_name,grade,phone,parent_name,parent_phone,regDate)
		values(#{picture},#{id, jdbcType=VARCHAR},#{name},#{authority,jdbcType=VARCHAR},#{school_name,jdbcType=VARCHAR},#{grade,jdbcType=VARCHAR},#{phone},#{parent_name},#{parent_phone},#{regDate})
	</update>


	<select id="selectStudentById" parameterType="str" resultType="student">
		select
		*
		from member
		where id=#{id}
	</select>
	
	<select id="selectStudentByPicture" parameterType="str" resultType="student">
		select
		*
		from member
		where picture=#{picture}
	</select>
	
	<update id="deleteStudent" parameterType="str" >
		delete
		from member
		where id=#{id}
	</update>
	
	<select id="selectStudentSequenceNextValue" resultType="str">
		select student_seq.nextval from dual
	</select>
	
	
</mapper>

