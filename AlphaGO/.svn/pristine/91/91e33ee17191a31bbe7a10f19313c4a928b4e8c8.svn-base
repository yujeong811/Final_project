package kr.or.ddit.service;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import kr.or.ddit.command.Criteria;
import kr.or.ddit.command.PageMaker;
import kr.or.ddit.command.SearchCriteria;
import kr.or.ddit.dao.StudentDAO;
import kr.or.ddit.dto.MemberVO;
import kr.or.ddit.dto.NoticeVO;
import kr.or.ddit.dto.StudentVO;
import kr.or.ddit.dto.SuggestVO;


public class StudentServiceImpl implements StudentService{
	
	private StudentDAO studentDAO;
	public void setStudentDAO(StudentDAO studentDAO) {
		this.studentDAO = studentDAO;
	}
	/*
	 * @Override public List<StudentVO> getStudentList() throws Exception { return
	 * studentDAO.selectStudentList(); }
	 * 
	 * @Override public List<StudentVO> getStudentList(Criteria cri) throws
	 * Exception { // TODO Auto-generated method stub return null; }
	 * 
	 * @Override public Map<String, Object> getStudentListForPage(Criteria cri)
	 * throws Exception { SearchCriteria searchCri = (SearchCriteria) cri;
	 * Map<String, Object> dataMap = new HashMap<String, Object>();
	 * 
	 * PageMaker pageMaker = new PageMaker(); pageMaker.setCri(cri);
	 * pageMaker.setTotalCount(studentDAO.selectSearchStudentListCount(searchCri));
	 * 
	 * List<StudentVO> studentList = studentDAO.selectStudentList(searchCri);
	 * 
	 * dataMap.put("studentList", studentList); dataMap.put("pageMaker", pageMaker);
	 * 
	 * return dataMap; }
	 */
	@Override
	public Map<String, Object> getStudentList(Criteria cri) throws SQLException {
		SearchCriteria searchCri = (SearchCriteria) cri;
		Map<String, Object> dataMap = new HashMap<String, Object>();

		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		try {
			pageMaker.setTotalCount(studentDAO.selectStudentListCount(searchCri));
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		List<StudentVO> studentList = studentDAO.selectSearchStudentList(searchCri);

		dataMap.put("studentList",studentList);
		dataMap.put("pageMaker", pageMaker);

		return dataMap;
	}
	@Override
	public void regist(StudentVO student) throws Exception {
		String stid =studentDAO.selectStudentSequenceNextValue();
		
		if(student.getAuthority().equals("ROLE_STUDENT")) {
			student.setId("S"+stid);
		}else if(student.getAuthority().equals("ROLE_TEACHER")) {
			student.setId("T"+stid);
		}
		
		
		
		
		studentDAO.insertStudent(student);
		
	}
	@Override
	public StudentVO getStudent(String id) throws Exception {
		StudentVO student=studentDAO.selectStudentById(id);
		return student;
	}
	@Override
	public void remove(String id) throws Exception {
		studentDAO.deleteStudent(id);
		
	}
	
	
	

}
