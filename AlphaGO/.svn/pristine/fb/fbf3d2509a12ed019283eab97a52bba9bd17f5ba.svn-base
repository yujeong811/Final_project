package kr.or.ddit.controller.view;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.command.CalenderListCommand;
import kr.or.ddit.dto.MemberVO;
import kr.or.ddit.dto.PacounseltVO;
import kr.or.ddit.dto.UniversityVO;
import kr.or.ddit.service.CalendarService;
import kr.or.ddit.service.MemberService;

@Controller
@RequestMapping("/consulting")
public class ConsultController {

	@Autowired
	private CalendarService calendarService;

	@Autowired
	private MemberService memberService;

	@RequestMapping("/insert")
	public String insert() throws Exception {
		String url = "consulting/insert";
		return url;
	}

	@RequestMapping("/registPacounselt")
	public String registPacounselt(PacounseltVO pvo) throws Exception {
		String url = "redirect:list.go";

		Map<String, UniversityVO> uniMap =memberService.getSHUniList(pvo.getClient());
		pvo.setFuCode(uniMap.get("fuUni").getUnivCode());
		pvo.setSuCode(uniMap.get("suUni").getUnivCode());
		pvo.setTuCode(uniMap.get("tuUni").getUnivCode());

		return url;
	}

	@RequestMapping("/detail")
	public String detail() throws Exception {
		String url = "consulting/detail";
		return url;
	}

	@RequestMapping("/insertdetail")
	public String insertdetail() throws Exception {
		String url = "consulting/insertdetail";
		return url;
	}
	@RequestMapping("/list")
	public String list() throws Exception {
		String url = "consulting/list";
		return url;
	}

	@ResponseBody
	@RequestMapping(value = "/calenderData", method = RequestMethod.GET)
	public ResponseEntity<List<CalenderListCommand>> calendar(HttpSession session) throws Exception{

		ResponseEntity<List<CalenderListCommand>> entity = null;
		MemberVO member = (MemberVO) session.getAttribute("loginUser");
		String id=member.getId();
		List<CalenderListCommand> list = null;

		try {
			list = calendarService.getCalendarDataForSubmit(id);

			entity = new ResponseEntity<List<CalenderListCommand>>(list, HttpStatus.OK);
		}catch (Exception e) {
			entity = new ResponseEntity<List<CalenderListCommand>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return entity;
	}

	@ResponseBody
	@RequestMapping(value = "/getCounselorList", method = RequestMethod.GET)
	public List<MemberVO> getCounselorList(String authority) throws Exception{
		return memberService.getMemberListByAuthority(authority);
	}

	@ResponseBody
	@RequestMapping(value = "/getReservationList", method = RequestMethod.GET)
	public List<String> getReservationList(String date, String type, String counselor) throws Exception{
		List<String> list = calendarService.getReservationList(date, type, counselor);
		return list;

	}

}
