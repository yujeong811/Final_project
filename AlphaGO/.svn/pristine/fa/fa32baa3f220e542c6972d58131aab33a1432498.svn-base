package kr.or.ddit.dao;

import java.sql.SQLException;
import java.util.List;

import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.session.SqlSession;

import kr.or.ddit.dto.AttendanceVO;

public class AttendanceDAOImpl implements AttendanceDAO{

	private SqlSession session;
	public void setSession(SqlSession session) {
		this.session = session;
	}


	@Override
	public AttendanceVO selectAttendById(AttendanceVO attend) throws SQLException {
		return session.selectOne("Attendance-Mapper.selectAttendById", attend);
	}


	@Override
	public int selectAttNextSeq() throws SQLException {
		return session.selectOne("Attendance-Mapper.selectAttNextSeq");
	}


	@Override
	public void insertNewAttend(AttendanceVO attend) throws SQLException {
		session.update("Attendance-Mapper.insertNewAttend", attend);
	}


	@Override
	public void updateOutTimeIsNow(AttendanceVO attend) throws SQLException {
		session.update("Attendance-Mapper.updateOutTimeIsNow",attend);
	}


	@Override
	public String selectEndTime(String id) throws SQLException {
		return session.selectOne("Attendance-Mapper.selectEndTime", id);
	}


	@Override
	public String selectStartTime(String id) throws SQLException {
		return session.selectOne("Attendance-Mapper.selectStartTime", id);
	}


	@Override
	public void updateStatus(AttendanceVO attend) throws SQLException {
		session.update("Attendance-Mapper.updateStatus", attend);
	}


	@Override
	public void updateInTime(AttendanceVO attend) throws SQLException {
		session.update("Attendance-Mapper.updateInTime", attend);
	}


	@Override
	public List<AttendanceVO> selectAllAttendById(String id, String month) throws SQLException {
		int offset = 0;
		int limit = 0;
		switch (month) {
		case "all":
			return session.selectList("Attendance-Mapper.selectAllAttendById", id);
		case "1":
			limit = 30;
			break;
		case "3":
			limit = 30 * 3;
			break;
		}
		RowBounds rowBounds = new RowBounds(offset, limit);
		return session.selectList("Attendance-Mapper.selectAllAttendById", id, rowBounds);

	}


	@Override
	public void insertEmptyAttend(AttendanceVO attend) throws SQLException {
		session.update("Attendance-Mapper.insertEmptyAttend", attend);
	}

}
