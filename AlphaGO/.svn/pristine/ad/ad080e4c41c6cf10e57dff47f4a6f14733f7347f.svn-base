package kr.or.ddit.controller.view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.command.SearchCriteria;
import kr.or.ddit.dto.AssignNameVO;
import kr.or.ddit.dto.ClassReviewVO;
import kr.or.ddit.dto.ClassVO;
import kr.or.ddit.dto.MemberVO;
import kr.or.ddit.dto.SubjectVO;
import kr.or.ddit.service.ClassService;
import kr.or.ddit.service.ReviewService;

@Controller
@RequestMapping("/review")
public class ReviewController {
	@Autowired
	private ClassService classService;
	
	@Autowired
	private ReviewService reviewService;
	
   @RequestMapping("/main")
   public void main() {}
   
   // 수강후기 전체 수업 리스트
   @RequestMapping(value = "/list")
	public String reviewList(SearchCriteria cri, HttpSession session, Model model) {
		String url = "/review/list";
		List<ClassVO> classList = new ArrayList();
		List<ClassReviewVO> revList = new ArrayList();
		Map<String, Object> dataMap = null;
		MemberVO member = (MemberVO) session.getAttribute("loginUser");

		String id = member.getId();
		
		try {
			dataMap = classService.getClassing(id);
			revList = reviewService.selectReviewAll(cri);
			classList = reviewService.classList(id);
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		model.addAttribute("classList", classList);
		model.addAttribute("revList", revList);
		model.addAttribute("dataMap", dataMap);
		
		return url;
	}
   
   /**
	 * 강의 클릭후 후기 리스트 
	 * @param session
	 * @param name
	 * @return
	 * @throws SQLException
	 */
	@ResponseBody
	@RequestMapping("/reviewList")
	public ResponseEntity<Map<String, Object>> reviewList(HttpSession session, String className) throws SQLException {
		ResponseEntity<Map<String, Object>> entity = null;
		int avg = reviewService.reviewAvg(className);
		List<ClassReviewVO> revList = null;

		revList = reviewService.reviewClass(className);
		Map<String, Object> map = new HashMap<String, Object>();
		
		map.put("avg", avg);
		map.put("revList", revList);

		entity = new ResponseEntity<Map<String, Object>>(map, HttpStatus.OK);

		return entity;
	}
  
}






















