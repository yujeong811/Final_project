<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Teacher-Mapper">

	<sql id="search">
		<if test="searchType == 'n'.toString()">
			and name like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 's'.toString()">
			and school_code like '%'||#{keyword}||'%'
		</if>

		<if test="searchType == 'ns'.toString()">
			and (
			name like '%'||#{keyword}||'%'
			or
			school_code like
			'%'||#{keyword}||'%'
			)
		</if>

	</sql>



	<sql id="search2">
		<if test="searchType == 'n'.toString()">
			and name like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 's'.toString()">
			and school_code like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'g'.toString()">
			and grade like '%'||#{keyword}||'%'
		</if>

		<if test="searchType == 'nsg'.toString()">
			and (
			name like '%'||#{keyword}||'%'
			or
			school_code like
			'%'||#{keyword}||'%'
			or
			grade like '%'||#{keyword}||'%'
			)
		</if>

	</sql>
	
	<sql id="search3">
		<if test="searchType == 'd'.toString()">
			and b.subunit_name like '%'||#{keyword}||'%'
		</if>
		

		<if test="searchType == 'a'.toString()">
			and (
			b.subunit_name like '%'||#{keyword}||'%'
			or
			a.problem_content like
			'%'||#{keyword}||'%'
			
			)
		</if>

	</sql>








	<select id="processSearch" parameterType="string"
		resultType="string">
		select class_name from class
		where id=#{id}

	</select>

	<select id="processStudentlistCount" resultType="int">
		select
		count(*)
		from (select a.* from member a,class_ing b
		where
		a.id=b.id and
		b.class_code=#{classCode})
		where id is not null
		<include refid="search" />
		order by regDate desc

	</select>


	<select id="classCode" parameterType="string" resultType="int">
		select
		class_code from class
		where class_name=#{class_name}
	</select>


	<select id="class_ingStudentIdSearch">
		select distinct b.*
		from member a,(select id from
		class_ing where class_code=#{class_code}) b
	</select>

	<select id="processStudentlist" resultType="member">

		select *
		from(
		select rownum as rnum,SearchProcessStudentResult.*
		from (
		select a.* from member a,class_ing b
		where
		a.id=b.id and
		b.class_code=#{classCode}
		<include refid="search" />
		order by regDate desc
		) SearchProcessStudentResult
		    <![CDATA[
		    where rownum <= #{endRow}
		    ]]>
		)
		 <![CDATA[
		where rnum > #{startRow}		
		 ]]>
	</select>



	<select id="teacherstudentDetail" resultType="member">
		select *from member
		where id=#{id}
	</select>

	<select id="searchClass" resultType="string">
		select class_name from class
		where id=#{id}
	</select>



	<select id="teacherstudenttotalList" resultType="member">

		select distinct *
		from(
		select rownum as
		rnum,SearchProcessStudentResult.*
		from (
		select c.* from member
		c,(select b.id from (select class_code from class
		where id=#{id})
		a,class_ing b) d
		where c.id=d.id
		<include refid="search2" />

		) SearchProcessStudentResult
		    <![CDATA[
		    where rownum <= #{endRow}
		    ]]>
		)
		 <![CDATA[
		where rnum > #{startRow}		
		 ]]>
	</select>

	<select id="teacherstudenttotalListcount" resultType="int">
		select
		count(*)
		from (select c.* from member c,(select b.id from (select
		class_code from
		class where id=#{id}) a,class_ing b) d
		where c.id=d.id)
		where id is not null
		<include refid="search2" />
	</select>

	<!-- 아이디로 이름검색 -->
	<select id="idSearchName" resultType="string">
		select name from member
		where id=#{id}

	</select>

	<!-- 아이디로 과목코드 검색 -->
	<select id="idSearchSubjectCode" resultType="string">
		select subject_code
		from subject where subject_name=#{subject}
	</select>

	<!-- 과목코드로 세부과목조회 -->
	<select id="subjectCodeSearchDetailName" resultType="map">
		select
		subdetail_name,subdetail_code from subdetail where
		subject_code=#{subject_code}
	</select>

	<!-- 세부과목코드로 영역검색 -->
	<select id="detailCodeSearchSarea" resultType="map">
		select sano,saname
		from subarea where subdetail_code=#{subdetail_code}
	</select>


	<!-- 아이디로 과목검색 -->
	<select id="idSearchSubject" resultType="string">
		select subject from
		member where id=#{id}
	</select>


	<!--세부과목명으로 단원(구성)검색 -->
	<select id="danSearch" resultType="classprog">
		select * from class_prog where
		subdetail_code=(select subdetail_code from
		subdetail where
		subdetail_name=#{name})
	</select>


	<select id="schoolGrage" resultType="schoolscore">
		SELECT
		sscode
		,id
		,myscore
		,mygrade
		,standard_score
		,school_grade
		,school_term
		,subject_code
		,regdate
		,achievement
		,rank
		,stucnt
		,perfect_score
		,test_name
		FROM
		school_score
		where
		id=#{id}
	</select>

	<insert id="insertProblem" parameterType='problem'>
		insert into problem(
		problem_code
		,sano
		,problem_content
		,lproblem
		,problem_answer
		,problem_solution
		,grade
		,subject_proccess
		,school_code
		,picture
		,none
		,ntwo
		,ntree
		,nfour
		,nfive
		,plevel)
		values(#{problemCode},
		#{sano},
		#{problemContent},
		#{lproblem},
		#{problemAnswer},
		#{problemSolution},
		#{grade},
		#{subjectProccess},
		#{schoolCode},
		#{picture},
		#{none},
		#{ntwo},
		#{ntree},
		#{nfour},
		#{nfive},
		#{plevel})
	</insert>

	<insert id="insertjimoonProblem">

		INSERT INTO prob_content (
		problem_printcode
		,problem_code
		,problem_print
		) VALUES (
		#{jimoonNum},#{proC1},#{problemPrint})
	</insert>



	<select id="selectProblemSeqNext" resultType="int">
		select
		problem_seq.nextval as problem_code from dual
	</select>



	<select id="jimoonSequeceNext" resultType="int">
		select
		jimoon_seq.nextval as problem_printcode from dual
	</select>

	
	<select id="problemPXList" resultType="problem">
		select distinct *
		from(
		select rownum as
		rnum,SearchResult.*
		from (
	      
         select distinct  
          a.problem_code
   ,a.sano
   ,a.problem_content
   ,a.lproblem
   ,a.problem_answer
   ,a.problem_solution
   ,a.grade
   ,a.subject_proccess
   ,a.school_code
   ,a.picture
   ,a.none
   ,a.ntwo
   ,a.ntree
   ,a.nfour
   ,a.nfive
   ,a.plevel
   ,b.subunit_name
   ,c.saname
         from problem a,class_prog b,subarea c   
         where a.subject_proccess=b.subject_proccess
         and	   a.sano=c.sano
        and a.sano in
      (select sano from subarea 
      where subdetail_code in
        (select subdetail_code from subdetail
        where subject_code in (select subject_code from subject where subject_name in #{subject})))
       
        
        
		<include refid="search3" />

		) SearchResult
		    <![CDATA[
		    where rownum <= #{endRow}
		    ]]>
		)
		 <![CDATA[
		where rnum > #{startRow}		
		 ]]>
	
	  
	
	</select>
	
<!-- 	지문x문제 숫자 -->
		<select id="PXtotalcnt" resultType="int">
		select
		count(*)
		 from problem a,class_prog b 
         where a.subject_proccess=b.subject_proccess
		
		<include refid="search3" />
		
		</select>
		
<!-- 		문제가져오기 -->
   	<select id="getProblem" resultType="problem">
   	 select *from problem where problem_code=#{prC}
   	</select>
		
	<select id="getJimoon" resultType="string">
	select problem_print from prob_content where problem_code=#{prC}
	</select>		


</mapper>
