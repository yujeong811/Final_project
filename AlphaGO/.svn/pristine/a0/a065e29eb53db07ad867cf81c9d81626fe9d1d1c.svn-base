package kr.or.ddit.dao;

import java.sql.SQLException;
import java.util.List;

import kr.or.ddit.command.SearchCriteria;
import kr.or.ddit.dto.ClassPlanVO;
import kr.or.ddit.dto.ClassTimeVO;
import kr.or.ddit.dto.ClassVO;
import kr.or.ddit.dto.HomeworkPlanVO;
import kr.or.ddit.dto.WeekPlanVO;

public interface TclassDAO {
	
	/**
	 * 수업계획서가 등록되어 진행중인 수업목록
	 * @param cri
	 * @return
	 * @throws SQLException
	 */
	public List<ClassVO> selectSearchClassList(SearchCriteria cri) throws SQLException;
	
	/**
	 * 수업계획서가 등록되어 있지 않은 수업목록
	 * @param cri
	 * @return
	 * @throws SQLException
	 */
	public List<ClassVO> selectSearchUnregisteredClassList(SearchCriteria cri) throws SQLException;
	
	/**
	 * 수업계획서 미등록된 Class 정보 조회
	 * @param classCode
	 * @return
	 * @throws SQLException
	 */
	public ClassVO selectClassForModal(int classCode) throws SQLException;
	
	/**
	 * 수업계획서에 수업 시간표 출력
	 * @param classCode
	 * @return
	 * @throws SQLException
	 */
	public List<ClassTimeVO> selectClassTime(int classCode) throws SQLException;
	
	/**
	 * 수업계획서 seq값 가져오기
	 * @return
	 * @throws SQLException
	 */
	int selectClassPlanSeqNextValue() throws SQLException;
	
	/**
	 * weekplan seq값 가져오기
	 * @return
	 * @throws SQLException
	 */
	int selectWeekPlanSeqNextValue() throws SQLException;
	
	/**
	 * homeworkplan seq값 가져오기
	 * @return
	 * @throws SQLException
	 */
	int selectHomeworkPlanSeqNextValue() throws SQLException;
	
	/**
	 * 수업계획서 insert
	 * @param classPlan
	 * @throws SQLException
	 */
	void insertClassPlan(ClassPlanVO classPlan) throws SQLException;
	
	/**
	 * 주차별 계획 insert
	 * @param weekPlan
	 * @throws SQLException
	 */
	void insertWeekPlan(WeekPlanVO weekPlan) throws SQLException;
	
	/**
	 * 과제계획 insert
	 * @param homeworkPlan
	 * @throws SQLException
	 */
	void insertHomeworkPlan(HomeworkPlanVO homeworkPlan) throws SQLException;
	
	/**
	 * 해당 수업의 수업개요 및 교재 출력
	 * @param classCode
	 * @return
	 * @throws SQLException
	 */
	ClassPlanVO selectCPNOandTextbook(int classCode) throws SQLException;
	
	/**
	 * 해당 수업의 수업계획리스트 출력
	 * @param classCode
	 * @return
	 * @throws SQLException
	 */
	List<WeekPlanVO> selectWeekPlan(int classCode) throws SQLException;
	
	/**
	 * 해당 수업의 과제계획리스트 출력
	 * @param classCode
	 * @return
	 * @throws SQLException
	 */
	List<HomeworkPlanVO> selectHomeworkPlan(int classCode) throws SQLException;
	
	/**
	 * 수업계획서를 등록하고 수업테이블에 업데이트 
	 * @param classVO
	 * @throws SQLException
	 */
	void updateClassToRegisterClassPlan(ClassVO classVO) throws SQLException;
}



















