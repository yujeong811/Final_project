
function calcTimeByRoom(){
	//수업 시작일
	var startDate = $('#startDate').val();
	//수업 종료일
	var endDate = $('#endDate').val();
	
	var start = new Date(startDate);
	var end = new Date(endDate);
//	console.log(start);
//	console.log(end);

	//기간 일수
	var period = getDateDiff(start,end);
	console.log("일수 : " + period);
	
	var lcVlYoilCnt = fnDateGetSatSun(start, end);
	
//	console.log(lcVlYoilCnt);
}

//테이블 클릭시 시수 계산하는 함수
function calcTime(td){
	//수업 시작일 값 가져오기
	var startDate = $('#startDate').val(); //문자열 2022-01-01
	//수업 종료일 값 가져오기
	var endDate = $('#endDate').val(); //문자열 2022-01-01
	
//	if(!startDate && !endDate){
//		alert("시작일과 종료일이 선택 되지 않았습니다.")
//		return;
//	}
	var startSplit = startDate.split('-');
	var start = startSplit[0]+startSplit[1]+startSplit[2];
	var endSplit = endDate.split('-');
	var end = endSplit[0]+endSplit[1]+endSplit[2];
//	console.log(start);//20220101
//	console.log(end);//20220812
	
	var sdate = new Date(startDate);
	var edate = new Date(endDate);
	
	//요일 번호 0,1,2,3,4,5,6
	var ctday = $(td).children(0).text();
//	console.log(ctday);
	var intday = parseInt(ctday);
//	console.log(intday);
	
	console.log(lcDateCountDay(sdate, edate, intday));
	
	
}

//테이블 클릭 시 토글로 색 변경
function setColor(td){
	
	//수업 시작일 값 가져오기
	var startDate = $('#startDate').val(); //문자열 2022-01-01
	//수업 종료일 값 가져오기
	var endDate = $('#endDate').val(); //문자열 2022-01-01
//	if(!startDate && !endDate){
//		return;
//	}
	var cln = $(td).attr("class");
//	console.log(cln);
	
	if(typeof cln == 'undefined'||cln==''){
		$(td).attr("class","flipped");
	}else{
		$(td).attr("class","");
	}
}

//요일 수 계산
//parm d1 : 날짜형식
//parm d2 : 날짜형식
//daycode : 요일코드
function lcDateCountDay(d1,d2, daycode) {
  var count=0;
  var tmp;
  for (var i=0; i<=(d2-d1)/1000/60/60/24; i++) {
    tmp=new Date(d1);
    tmp.setDate(tmp.getDate()+i);
 //0(일요일), 1(월요일), 2(화요일), 3(수요일), 4(목요일) 5(금요일), 6(토요일)
    if (tmp.getDay()==daycode) {
      count++;
    }
  }
  return count;//if문이 0이니 일요일 개수 출력
}

//일수 차이
const getDateDiff = (d1, d2) => {
	  const date1 = new Date(d1);
	  const date2 = new Date(d2);
	  
	  const diffDate = date1.getTime() - date2.getTime();
	  
	  return Math.abs(diffDate / (1000 * 60 * 60 * 24)); // 밀리세컨 * 초 * 분 * 시 = 일
	}

//월 차이
const getMonthDiff = (d1, d2) => {
  const date1 = new Date(d1);
  const date2 = new Date(d2);
  
  const diffDate = date1.getTime() - date2.getTime();
  
  return Math.floor(Math.abs(diffDate / (1000 * 60 * 60 * 24 * 30)));
}

// 연도 차이
const getYearDiff = (d1, d2) => {
  const date1 = new Date(d1);
  const date2 = new Date(d2);
  
  const diffDate = date1.getTime() - date2.getTime();
  
  return Math.floor(Math.abs(diffDate / (1000 * 60 * 60 * 24 * 365)));
}


//날짜 형식의 데이터를 문자열로 바꿔주는 함수
function getFormatDate(date){
    var year = date.getFullYear();              //yyyy
    var month = (1 + date.getMonth());          //M
    month = month >= 10 ? month : '0' + month;  //month 두자리로 저장
    var day = date.getDate();                   //d
    day = day >= 10 ? day : '0' + day;          //day 두자리로 저장
    return  year + '-' + month + '-' + day;       //'-' 추가하여 yyyy-mm-dd 형태 생성 가능
}

//특정 날짜의 요일을 구하는 함수
function getDate(stringDate){ //날짜문자열 형식은 자유로운 편
    var week = ['일', '월', '화', '수', '목', '금', '토'];
    var dayOfWeek = week[new Date(stringDate).getDay()];
    return dayOfWeek;
}










