<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Class-Mapper">
  <sql id="search">
		<if test="searchType == 'n'.toString()">
			and a.class_name like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 's'.toString()">
			and c.subject_name like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'nst'.toString()">
			and (
			class_name like '%'||#{keyword}||'%'
			or
			c.subject_name like '%'||#{keyword}||'%'						
			)			
		</if>
	</sql>

	<select id="getClassing" resultType="classing" parameterType="string">
		select
		    a.class_name, a.start_date, a.end_date
		from
		    class a, class_ing b
		where a.class_code = b.class_code
		  and b.id=#{id}
		order by a.subdetail_code
	</select>
	
	<select id="getAllClass" resultType="class">
        select *
		from(
                select rownum as rnum,SearchClassResult.*
                from ( 
                select
                    a.class_code
                   ,a.class_rank
                   ,a.class_name
                   ,a.id
                   ,a.subdetail_code
                   ,a.cpno
                   ,a.start_date
                   ,a.end_date
                   ,a.stu_cnt
                   ,a.class_price
                   ,a.total_time
                   ,a.class_grade
                   ,b.subdetail_name
                   ,b.subject_code
                   ,c.subject_name
                from
                    class a, subdetail b, subject c
                where a.subdetail_code = b.subdetail_code
                  and b.subject_code=c.subject_code	
                	<include refid="search" />			
		    )  SearchClassResult
 			<![CDATA[
		    where rownum <= #{endRow}
		    ]]>
		)<![CDATA[
		where rnum > #{startRow}
		 ]]>	
	</select>
	
	<select id="selectSearchClassList" resultType="class">
                select
                    a.class_code
                   ,a.class_rank
                   ,a.class_name
                   ,a.id
                   ,a.subdetail_code
                   ,a.cpno
                   ,a.start_date
                   ,a.end_date
                   ,a.stu_cnt
                   ,a.class_price
                   ,a.total_time
                   ,a.class_grade
                   ,b.subdetail_name
                   ,b.subject_code
                   ,c.subject_name
                from
                    class a, subdetail b, subject c
                where a.subdetail_code = b.subdetail_code
                  and b.subject_code=c.subject_code	
                	<include refid="search" />			
	</select>

	<select id="selectSearchClassListCount" resultType="int">
		select
		count(*)
		from class a, subdetail b, subject c
		where a.subdetail_code = b.subdetail_code
		and b.subject_code=c.subject_code
		<include refid="search" />
	</select>

	<select id="getClassDetail" resultType="class">
		select
			a.class_code
			,a.class_rank
			,a.class_name
			,a.id
			,a.subdetail_code
			,a.cpno
			,a.start_date
			,a.end_date
			,a.stu_cnt
			,a.class_price
			,a.total_time
			,a.class_grade
			,b.subdetail_name
			,b.subject_code
			, c.subject_name
		from
			class a, subdetail b, subject c
		where a.subdetail_code = b.subdetail_code
		  and b.subject_code=c.subject_code
		  and a.class_code = #{classCode}
	</select>

	<select id="getSubDetail" resultType="subject">
		select *
		from subdetail
		where subject_code = #{target}
	</select>

	<select id="getClassCode" resultType="int">
		select classcode_seq.nextval from dual
	</select>
	
	<update id="registClass" parameterType="class">
		insert into class (
		    class_code
		   ,class_rank
		   ,class_name
		   ,subdetail_code
		   ,stu_cnt
		   ,class_price
		   ,class_grade
		) values (
		    #{classCode}
		    ,#{classRank}
		    ,#{className}
		    ,#{subdetailCode}
		    ,#{stuCnt}
		    ,#{classPrice}
		    ,#{classGrade}
		)
	</update>
	
	<update id="removeClass" parameterType="class">
		delete from class
		 where class_code = #{classCode}
	</update>
	
	<select id="getTeacherList" resultType="member">
		select
		id
		,name
		,enabled
		,phone
		,subject
		,major
		from
		member
		where id is not null
		and subject like '%'||#{subjectName}||'%'
	</select>

	<select id="getTeacherById" resultType="member">
		select
		id
		,name
		,enabled
		,phone
		,subject
		,major
		from
		member
		where id is not null
		and id = #{id}
	</select>
	
	<select id="getCertificate" resultType="certificate">
		select
			cer_code
			,id
			,cer_name
		from certificate
		where id = #{id}
	</select>
	
	
	<select id="getUseRoomTime" resultType="useroom">
		select
		    a.class_code
		   ,a.id
		   ,a.start_date
		   ,a.end_date
		   ,a.total_time
		   ,b.time_code
		   ,b.room_code
		   ,b.start_time
		   ,b.end_time
		   ,b.classday
		   ,b.ctperiod
		from
		    class a, time_detail b
		where a.class_code = b.class_code
		  and room_code = #{roomCode}
	</select>
	
	<update id="updateClassOpen">
		update class
		   set
			   id =#{id}
			   ,start_date =#{startDate}
		       ,end_date =#{endDate}
			   ,total_time =#{totalTime}
		 where
			   class_code = #{classCode}
	</update>
	
	<update id="registTimeDetail">
		insert into time_detail (
		    time_code
		   ,room_code
		   ,start_time
		   ,end_time
		   ,class_code
		   ,classday
		   ,ctperiod
		) values (
		    #{timeCode}
		   ,#{roomCode}
		   ,#{startTime}
		   ,#{endTime}
		   ,#{classCode}
		   ,#{classday}
		   ,#{ctperiod}
		)
	</update>
	
	<select id="getTimedetailSeq" resultType="int">
		select timedetail_seq.nextval from dual
	</select>
	
</mapper>



















