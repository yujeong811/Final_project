<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Exam-Mapper">

	<select id="getExam" resultType="exam" parameterType="String">
		select * from
		(select a.exam_code, TO_CHAR(a.start_date, 'yyyy/MM/dd') as start_date, TO_CHAR(a.end_date, 'yyyy/MM/dd') as end_date,
		a.exam_name, a.class_code, d.class_name
		from exam a, class b, class_ing c, class d
		where a.class_code = b.class_code
		and b.class_code = c.class_code
		and c.class_code = d.class_code
		and c.id = #{id}
		minus
		select a.exam_code, TO_CHAR(a.start_date, 'yyyy/MM/dd') as start_date, TO_CHAR(a.end_date, 'yyyy/MM/dd') as end_date,
		a.exam_name, a.class_code, e.class_name
		from exam a, class b, class_ing c, academy_score d, class e
		where a.class_code = b.class_code
		and b.class_code = c.class_code
		and d.exam_code = a.exam_code
		and c.class_code = e.class_code
		and c.id = #{id}
		and d.id = #{id})
		<![CDATA[where TO_CHAR(SYSDATE, 'yyyy/MM/dd') <= end_date]]>
		order by end_date
	</select>

	<select id="selectExamList" resultType="exam" parameterType="map">
		select KK.*, e.* from
		(select a.exam_code, TO_CHAR(a.start_date, 'yyyy/MM/dd') as start_date, TO_CHAR(a.end_date, 'yyyy/MM/dd') as end_date,
		a.exam_name, a.class_code, c.id
		from exam a, class b, class_ing c, class d
		where a.class_code = b.class_code
		and b.class_code = c.class_code
		and c.class_code = d.class_code
		and d.class_name = #{className}
		and c.id = #{id}) KK, academy_score e
		where KK.exam_code = e.exam_code(+)
		and KK.id = e.id(+)
	</select>

	<select id="getExamProblem" resultType="problem" parameterType="int">
		select KK.*, d.problem_print, d.problem_printcode from
		(select c.exam_name, b.*
		from col_exam a, problem b, exam c
		where a.problem_code = b.problem_code
		and a.exam_code = c.exam_code
		and a.exam_code = #{examCode}
		order by a.pronum) KK, prob_content d
		where KK.problem_code = d.problem_code(+)
	</select>

	<select id="getJimoon" resultType="problem" parameterType="int">
		select a.*, b.PROBLEM_PRINT
		from problem a, prob_content b
		where a.problem_code = b.problem_code
		and b.PROBLEM_PRINT is not null
		and a.problem_code = #{problemCode}
	</select>

	<update id="insertScore" parameterType="academyScore">
		insert into academy_score (ascode,academy_score,exam_code,id,regdate,perfect_score,achievement)
		values (#{ascode},#{academyScore},#{examCode},#{id},sysdate,100,#{achievement})
	</update>

	<select id="selectSeq" resultType="int">
		select academyScore_seq.NEXTVAL from dual
	</select>

	<select id="selectCode" resultType="int" parameterType="map">
		select problem_code
		from col_exam
		where pronum = #{pronum}
		and exam_code = #{examCode}
	</select>

	<update id="insertWrong" parameterType="wrong">
		insert into wrong (wno,id,updatedate,exam_code,problem_code,wrong)
		values (#{wno},#{id},sysdate,#{examCode},#{problemCode},#{wrong})
	</update>

	<select id="selectWrongSeq" resultType="int">
		select wrong_seq.NEXTVAL from dual
	</select>

	<select id="selectScore" parameterType="map" resultType="academyScore">
		select *
		from academy_score
		where exam_code = #{examCode}
		and id = #{id}
	</select>

	<select id="selectWrong" resultType="wrong">
		select *
		from wrong
		where exam_code = #{examCode}
		and id = #{id}
	</select>



</mapper>
