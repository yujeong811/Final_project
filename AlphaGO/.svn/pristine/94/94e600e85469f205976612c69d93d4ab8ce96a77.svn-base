package kr.or.ddit.controller.view;

import java.io.File;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.dto.AttachVO;
import kr.or.ddit.dto.PdsVO;
import kr.or.ddit.service.PdsService;

@Controller
@RequestMapping("/pds")
public class PdsController {

	private static final Logger logger = LoggerFactory.getLogger(PdsController.class);

	@Autowired
	private PdsService pdsService;

	@RequestMapping("/list")
	public String list(Model model) throws Exception {
		String url = "pds/list";

		List<PdsVO> pdsList = pdsService.getPdsList();

		logger.info("pdsList.size() : " + pdsList.size());

		model.addAttribute("pdsList", pdsList);




		return url;
	}



	@RequestMapping("/registForm")
	public String registForm() throws Exception {
		String url = "pds/regist";
		return url;
	}

	@RequestMapping("/detail")
	public String detail(int lcode, String from, Model model) throws Exception {
		String url = "pds/detail";
		logger.info("lCode : " + lcode);
		PdsVO pds = null;
		if(from != null && from.equals("list")){
			pds = pdsService.read(lcode);
			url = "redirect:/pds/detail.go?lcode=" + lcode;
		}else {
			pds = pdsService.getPds(lcode);
		}

		//파일명 재정의
		if(pds != null) {
			List<AttachVO> attachList = pds.getAttachList();
			if(attachList != null) {
				for(AttachVO attach : attachList) {
					String fileName = attach.getFileName().split("\\$\\$")[1];
					attach.setFileName(fileName);
				}
			}
		}


		model.addAttribute("pds", pds);

		return url;
	}

	@RequestMapping("/remove")
	public String remove(int lcode, RedirectAttributes rttr) throws Exception{
		String url =  "redirect:/pds/detail.do";

		// 첨부파일 삭제
		List<AttachVO> attachList = pdsService.getPds(lcode).getAttachList();
		if(attachList != null) {
			for(AttachVO attach : attachList) {
				File target = new File(attach.getUploadPath(), attach.getFileName());
				if(target.exists()) {
					target.delete();
				}
			}
		}

		pdsService.remove(lcode);

		rttr.addAttribute("lCode", lcode);
		rttr.addFlashAttribute("from", "remove");

		return url;
	}



	/* @RequestMapping("/remove") public String remove(int pno,RedirectAttributes
	 * rttr) throws Exception{ String url = "redirect:/pds/detail.do";
	 *
	 * //첨부파일 삭제 List<AttachVO>attachList=service.getPds(pno).getAttachList();
	 * if(attachList!=null) { for(AttachVO attach:attachList) { File target=new
	 * File(attach.getUploadPath(),attach.getFileName()); if(target.exists()) {
	 * target.delete(); } } }
	 *
	 *
	 * service.remove(pno);
	 *
	 *
	 *
	 * rttr.addAttribute("pno",pno); rttr.addFlashAttribute("from","remove"); return
	 * url; }
	 */

//	 @RequestMapping("/modifyForm")
//	 public ModelAndView modifyForm(int pno, ModelAndView mnv)throws SQLException{
//		 String url="pds/modify";
//
//		 PdsVO pds = service.read(pno);
//		 if(pds!=null) {
//			 List<AttachVO>attachList=pds.getAttachList();
//			 if(attachList!=null) {
//				 for(AttachVO attach:attachList) {
//					 String fileName=attach.getFileName().split("\\$\\$")[1];
//					 attach.setFileName(fileName);
//				}
//			 }
//		 }
//
//	}





	/**
	 * @Resource(name = "fileUploadPath") private String fileUploadPath;
	 *
	 * @RequestMapping(value="/regist",method=RequestMethod.POST, produces="text/plain;
	 *                                                            charset=utf-8")
	 *                                                            public String
	 *                                                            regist(PdsRegistCommand
	 *                                                            registReq,HttpServletRequest
	 *                                                            request,
	 *                                                            RedirectAttributes
	 *                                                            rttr)throws
	 *                                                            Exception{ String
	 *                                                            url="redirect:/pds/list.do";
	 *
	 *                                                            //file 저장
	 *                                                            ->List<AttachVO>
	 *                                                            String
	 *                                                            savePath=this.fileUploadPath;
	 *                                                            List<AttachVO>attachList=GetAttachesByMultipartFileAdapter.save(registReq.
	 *                                                            getUploadFile(),savePath);
	 *
	 *                                                            //DB PdsVO
	 *                                                            pds=registReq.toPdsVO();
	 *                                                            pds.setAttachList(attachList);
	 *                                                            pds.setTitle((String)request.getAttribute("XSStitle"));
	 *                                                            service.regist(pds);
	 *
	 *                                                            //output
	 *                                                            rttr.addFlashAttribute("from","regist");
	 *
	 *                                                            return url; }
	 */


	/*
	 * @RequestMapping("/getFile") public String getFile(int ano,Model model)throws
	 * Exception{ String url="downloadFile";
	 *
	 * AttachVO attach=service.getAttachByAno(ano);
	 *
	 * model.addAttribute("savedPath",attach.getUploadPath());
	 * model.addAttribute("fileName",attach.getFileName());
	 *
	 * return url; }
	 *
	 *
	 *
	 *
	 * @RequestMapping("/modifyForm") public ModelAndView modifyForm(int
	 * pno,ModelAndView mnv)throws SQLException{ String url="pds/modify";
	 *
	 * PdsVO pds = service.read(pno);
	 *
	 * if(pds!=null) { List<AttachVO>attachList=pds.getAttachList();
	 * if(attachList!=null) { for(AttachVO attach:attachList) { String
	 * fileName=attach.getFileName().split("\\$\\$")[1];
	 * attach.setFileName(fileName); } }
	 *
	 * }
	 *
	 *
	 *
	 *
	 * mnv.addObject("pds",pds); mnv.setViewName(url);
	 *
	 * return mnv; }
	 *
	 *
	 *
	 * @RequestMapping("/modify") public String modifyPost(PdsModifyCommand
	 * modifyReq,HttpServletRequest request, RedirectAttributes rttr) throws
	 * Exception{
	 *
	 * String url = "redirect:/pds/detail.do";
	 *
	 * //파일 삭제
	 * if(modifyReq.getDeleteFile()!=null&&modifyReq.getDeleteFile().length>0) {
	 * for(String anoStr:modifyReq.getDeleteFile()) { int
	 * ano=Integer.parseInt(anoStr); AttachVO attach=service.getAttachByAno(ano);
	 *
	 * File deleteFile=new File(attach.getUploadPath(),attach.getFileName());
	 *
	 * if(deleteFile.exists()) { deleteFile.delete();//File 삭제 }
	 * service.removeAttachByAno(ano);//db 삭제 } }
	 *
	 * //파일 저장
	 * List<AttachVO>attachList=GetAttachesByMultipartFileAdapter.save(modifyReq.
	 * getUploadFile(),fileUploadPath);
	 *
	 * //pdsVO setting PdsVO pds=modifyReq.toPdsVO(); pds.setAttachList(attachList);
	 * pds.setTitle((String)request.getAttribute("XSStitle"));
	 *
	 * //DB 저장 service.modify(pds);
	 *
	 *
	 * rttr.addFlashAttribute("from","modify");
	 * rttr.addAttribute("pno",pds.getPno());
	 *
	 * return url; }
	 *
	 *
	 *
	 *
	 *
	 * @RequestMapping("/remove") public String remove(int pno,RedirectAttributes
	 * rttr) throws Exception{ String url = "redirect:/pds/detail.do";
	 *
	 * //첨부파일 삭제 List<AttachVO>attachList=service.getPds(pno).getAttachList();
	 * if(attachList!=null) { for(AttachVO attach:attachList) { File target=new
	 * File(attach.getUploadPath(),attach.getFileName()); if(target.exists()) {
	 * target.delete(); } } }
	 *
	 *
	 * service.remove(pno);
	 *
	 *
	 *
	 * rttr.addAttribute("pno",pno); rttr.addFlashAttribute("from","remove"); return
	 * url; }
	 */

}
