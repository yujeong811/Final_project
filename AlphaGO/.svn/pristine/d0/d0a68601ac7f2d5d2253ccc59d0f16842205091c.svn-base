package kr.or.ddit.dao;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.session.SqlSession;

import kr.or.ddit.command.Criteria;
import kr.or.ddit.command.SearchCriteria;
import kr.or.ddit.dto.StudentVO;
import kr.or.ddit.dto.TeachermasVO;

public class TeacherMasDAOImpl implements TeacherMasDAO{

	private SqlSession session;
	public void setSession(SqlSession session) {
		this.session = session;
	}
	
	@Override
	public List<TeachermasVO> selectTeacherList() throws Exception {
		List<TeachermasVO> teacherList=null;
		
		try {
			teacherList=session.selectList("TeacherMas-Mapper.selectTeacherList");
		} catch (Exception e) {
			throw e;
		}
		return teacherList;
	}

	@Override
	public List<TeachermasVO> selectTeacherList (Criteria cri) throws Exception {
		int offset = cri.getStartRowNum();
		int limit = cri.getPerPageNum();
		RowBounds rowBounds = new RowBounds(offset,limit);
		
		List<TeachermasVO> teacherList
		= session.selectList("TeacherMas-Mapper.selectTeacherList",null,rowBounds);
		
		return teacherList;
	}

	@Override
	public int selectTeacherListCount() throws Exception {
		int totalCount=session.selectOne("TeacherMas-Mapper.selectTeacherListCount");
		
		return totalCount;
	}

	@Override
	public int selectSearchTeacherListCount(SearchCriteria cri) throws Exception {
		int totalCount = session.selectOne("TeacherMas-Mapper.selectTeacherListCount", cri);
		return totalCount;
	}

	@Override
	public List<TeachermasVO> selectSearchTeacherList( Criteria cri) throws SQLException {
		int startRow = cri.getStartRowNum();
		int endRow = startRow+cri.getPerPageNum()-1;

		SearchCriteria searchCri = (SearchCriteria)cri;
		
		Map<String, Object> dataParam = new HashMap<String, Object>();
		dataParam.put("startRow", startRow);
		dataParam.put("endRow", endRow);
		dataParam.put("searchType", searchCri.getSearchType());
		dataParam.put("keyword", searchCri.getKeyword());

		List<TeachermasVO> teacherList = session.selectList("TeacherMas-Mapper.selectSearchTeacherList", dataParam);

		return teacherList;
	}

	@Override
	public void insertTeacher(TeachermasVO teamas) throws SQLException {
		session.update("TeacherMas-Mapper.insertTeacher",teamas);
	
	}
//
//	@Override
//	public StudentVO selectStudentById(String id) throws SQLException {
//		StudentVO student = session.selectOne("Student-Mapper.selectStudentById",id);
//		return student;
//	}
//
//	@Override
//	public StudentVO selectStudentByPicture(String picture) throws SQLException {
//		StudentVO student = null;
//		student = session.selectOne("Student-Mapper.selectStudentByPicture", picture);
//		return student;
//	}
//
//	@Override
//	public void deleteStudent(String id) throws SQLException {
//		session.update("Student-Mapper.deleteStudent", id);
//	}


}
