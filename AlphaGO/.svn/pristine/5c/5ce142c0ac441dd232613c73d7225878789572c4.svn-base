package kr.or.ddit.controller.view;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.request;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import kr.or.ddit.command.SearchCriteria;
import kr.or.ddit.dto.MemberVO;
import kr.or.ddit.dto.ProblemVO;
import kr.or.ddit.service.TeacherService;

@Controller
@RequestMapping("/teacher")
public class TeacherController {
	  @Autowired
	  TeacherService service;
	
	
	   @RequestMapping("/home")
			public String home() throws Exception {
				String url = "teacher/home";
				return url;
			}
	   @RequestMapping("/attend")
		public String atten() throws Exception {
			String url = "teacher/attend";
			return url;
		}
	   @RequestMapping("/mypage")
		public String mypage() throws Exception {
			String url = "teacher/mypage";
			return url;
		}
	   @RequestMapping("/modify")
		public String modify() throws Exception {
			String url = "teacher/modify";
			return url;
		}
	   @RequestMapping("/mypagePass")
	   public String mypagePass() throws Exception {
		   String url = "teacher/mypagePass";
		   return url;
	   }
	   
	   
	   
	   
	   @RequestMapping("/studentmanage_home")
	   public String detail(HttpServletRequest request,Model md) throws Exception {
		   HttpSession session=request.getSession();
		//   MemberVO loginUser=(MemberVO)session.getAttribute("LoginUser");
		   String id="titi";
		//   String id=(String)session.getAttribute("id");
		   
		   List<String>classList=service.getclassList(id);
		   System.out.println(classList);
		   md.addAttribute("classList",classList);
		   String url = "teacher/studentmanage_home";
		   return url;
	   }
	   
	   @RequestMapping("/studentmanage_exam")
		public String exam() throws Exception {
			String url = "teacher/studentmanage_exam";
			return url;
		}
	   @RequestMapping("/studentmanage_attendance")
	 		public String attendance() throws Exception {
	 			String url = "teacher/studentmanage_attendance";
	 			return url;
	 		}
	   @RequestMapping("/studentmanage_school")
		public String schooltest(SearchCriteria cri,Model md) throws Exception {
		//   HttpSession session=request.getSession();
			//   MemberVO loginUser=(MemberVO)session.getAttribute("LoginUser");
			   String id="titi";
			  Map<String,String> dt=service.idSearchName(id);
			  Map<String,Object>dataMap= service.teacherstudenttotalList(id,cri);
			  dataMap.put("name",dt.get("name"));
			  dataMap.put("subject",dt.get("subject"));
			  md.addAttribute("dataMap",dataMap);
			 // System.out.println("?");
			 // System.out.println(dataMap.get("studentTotalList"));
			String url = "teacher/studentmanage_school";
			return url;
		}
	   @RequestMapping("/studentmanage_acardemy")
			public String acardemytest() throws Exception {
				String url = "teacher/studentmanage_acardemy";
				return url;
			}
	   @RequestMapping("/exammanage")
		public String exammange(HttpServletRequest request,Model md) throws Exception {
		//   HttpSession session=request.getSession();
			//   MemberVO loginUser=(MemberVO)session.getAttribute("LoginUser");
			   String id="titi";
			   List<String>processList=service.processSearch(id);
			   md.addAttribute("processList", processList);
			String url = "teacher/exammanage";
			return url;
		}
	   
	   @RequestMapping("/exammanage2")
			public String exammange2() throws Exception {
				String url = "teacher/exammanage2";
				return url;
			}
	   @RequestMapping("/submitproblem")
			public String submitproblem() throws Exception {
				String url = "teacher/submitproblem";
				return url;
			}
	   @RequestMapping("/problemmanage")
			public String problemmanage() throws Exception {
			//   HttpSession session=request.getSession();
			//   MemberVO loginUser=(MemberVO)session.getAttribute("LoginUser");
			   String id="titi";
			 List<ProblemVO>problemList=service.problemList(id);
			   	
		   
					String url = "teacher/problemmanage";
					return url;
				}
	   @RequestMapping("/problemmodify")
	          public String problemmodify()throws Exception{
		   String url="teacher/problemmodify";
		   return url;
	   }
	   @RequestMapping("/problemcreateG")
       public String problemcreateG(HttpServletRequest request,Model md)throws Exception{
		//   HttpSession session=request.getSession();
					//   MemberVO loginUser=(MemberVO)session.getAttribute("LoginUser");
					   String id="titi";
					   
					   //객관식 문제만들기 화면 전처리 데이터들 받는 서비스
					   Map<String,Object>data=service.createGdata(id);
					  data.put("subject",service.idSearchName(id).get("subject"));
		   md.addAttribute("data", data);
		   
		   
		   
	   String url="teacher/problemcreateG";
	   return url;
}
	   @RequestMapping("/problemcreateJ")
       public String problemcreateJ(HttpServletRequest request,Model md)throws Exception{
		   String id="titi";
		   
		   //객관식 문제만들기 화면 전처리 데이터들 받는 서비스
		   Map<String,Object>data=service.createGdata(id);
		   data.put("subject",service.idSearchName(id).get("subject"));
           md.addAttribute("data", data);

	   String url="teacher/problemcreateJ";
	   return url;
}
	   @RequestMapping("/problemjcreateG")
       public String problemjcreateG()throws Exception{
	   String url="teacher/problemjcreateG";
	   return url;
}
	   
	   @RequestMapping("/problemjcreateJ")
       public String problemjcreateJ()throws Exception{
	   String url="teacher/problemjcreateJ";
	   return url;
}
	   
	   @RequestMapping("/wrongnote")
       public String wrongnote()throws Exception{
	   String url="teacher/wrongnote";
	   return url;
}
	   @RequestMapping("/teacherconsult")
       public String teacherconsult()throws Exception{
	   String url="teacher/teacherconsult";
	   return url;
}
	   @RequestMapping("/teacherconsultdetail")
       public String teacherconsultdetail()throws Exception{
	   String url="teacher/teacherconsultdetail";
	   return url;
}
	   @RequestMapping("/teacherconsultend")
       public String teacherconsultend()throws Exception{
	   String url="teacher/teacherconsultend";
	   return url;
}
	   
	
	   @RequestMapping("/teacherconsultcancel")
       public String teacherconsultcancel()throws Exception{
	   String url="teacher/teacherconsultcancel";
	   return url;
}
	   @RequestMapping("/teacheranalysis")
       public String teacheranalysis()throws Exception{
	   String url="teacher/teacheranalysis";
	   return url;
}
	   
	   @RequestMapping(value="/problemCreatego", method = RequestMethod.POST)
       public String problemCreatego(ProblemVO problem)throws Exception{
		   System.out.println(problem);
		   String url="";
		  int cnt=0; 
		  cnt=service.insertProblem(problem);
		  if(problem.getLproblem().equals("객관식")) {
			  url="redirect:problemcreateG.go";
		  }else {
			  url="redirect:problemcreateJ.go";
		  }
	 
	   return url;
}
	   
	   
}
